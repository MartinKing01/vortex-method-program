#version 460 core

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

struct Vortex{
    vec4 position;
    vec4 normal;
    vec4 vorticity;
    vec4 lifetime;
};

layout(std430, binding=10) buffer boundary_vorticies_data{
    Vortex boundary_vorticies[];
};

layout(std430, binding=30) buffer errors_data{
    vec4 errors[];
};

layout(std430, binding=20) buffer matrix_data{
    float matrix[];
};

struct BoundaryInfo{
    uint current_index;
    uint current_count;
    uint count;
};

layout(std430, binding=50) buffer boundary_info_data{
    BoundaryInfo info;
};

layout(location = 0) uniform float dt;

void main() {
    uint index = info.current_index * info.current_count + gl_GlobalInvocationID.x;

    uint offset = 3 * errors.length();

    vec3 correction = vec3(0.0, 0.0, 0.0);
    for (uint column_index = 0; column_index < 3; column_index++){
        for(uint row_index = 0; row_index < errors.length(); row_index++){
            for(uint small_row_index = 0; small_row_index < 3; small_row_index++){
                correction[column_index] += matrix[index * offset * 3 + 3 * row_index + small_row_index + column_index * offset] * errors[row_index][small_row_index];
            }
        }
    }
    boundary_vorticies[index].vorticity.xyz = correction;
}